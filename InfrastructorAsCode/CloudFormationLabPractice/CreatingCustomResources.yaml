AWSTemplateFormatVersion: '2010-09-09'
#Had to make a lot changes in here from the Lab. Check on the Iam role, SNS(Optional),
#Fix Lambda function to get the response so my Stack doesn't get stuck
Resources:
  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: LambdaExecutionPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: "*"
  SNSTopic:
    Type: AWS::SNS::Topic
    Properties:
      Subscription:
        - Protocol: email
          Endpoint: smsalfahad@gmail.com
  CustomResource:
    Type: "AWS::CloudFormation::CustomResource"
    Properties:
      ServiceToken: !GetAtt CustomLambdaFunction.Arn
  CustomNotificationResource:
    Type: "AWS::CloudFormation::CustomResource"
    Properties:
      ServiceToken: !Ref SNSTopic
  CustomLambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      Handler: index.handler
      Role: !GetAtt LambdaExecutionRole.Arn
      Code:
        ZipFile: |
          import boto3
          import json
          import cfnresponse
          def handler(event, context):
              try:
                  print("Received event: " + json.dumps(event))
                  # Your custom resource logic here
                  cfnresponse.send(event, context, cfnresponse.SUCCESS, {})
              except Exception as e:
                  print(f"Error: {str(e)}")
                  cfnresponse.send(event, context, cfnresponse.FAILED, {})
      Runtime: python3.8
#      Timeout: 100